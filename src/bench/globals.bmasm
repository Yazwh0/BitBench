library BitBench.Globals.Manager;

import Init="initialisation.bmasm";

private static HashSet<string> _mouse = new();

private static void Setup()
{
    ; define segment ranges
    .segment bench_zp $d4 $2c
    .segment bench_memory $a000 $200
    .segment bench_scheduler $a200 $100
    .segment bench_general $a300 $100
    .segment bench_process $a400 $100
    .segment bench_app_header $a000 $100
    .segment bench_window $a500 $200

    .segment bench_zp, scope=bench_general

    ; todo, match these with the api helper
    .const application_entry_l $a010
    .const application_entry_h $a011
    .const application_close_l $a012
    .const application_close_h $a013
    .const application_frame_update $a014
    .const application_zp_count $a015

    .const bank_kernel = $00
    .const bank_bench = $01
    .const bank_windowmap = $02

    .padvar ushort zp_pointer
    .padvar ushort zp_pointer2
    .padvar byte factor1
    .padvar byte factor2
    .padvar byte return_rambank
    .padvar ushort mouse_x
    .padvar ushort mouse_y
    .padvar byte mouse_buttons
    .padvar byte prev_mouse_x
    .padvar byte prev_mouse_y
    .padvar byte prev_mouse_buttons
    .padvar byte keyboard

    .endsegment
}

public static void Call_HandleMouse()
{
    foreach(var callback in _mouse)
    {
        jsr @(callback)
    }
}

public static void AddMouseHandler(string name)
{    
    _mouse.Add(name);
}

public override void Initialise()
{
    Setup();
}
 